# Python development environment with uv and ruff
# Copy this file to your Python project root as .envrc
# Then run: direnv allow

# Choose environment type: minimal (default) or full
# To use full environment, set: export PYTHON_ENV=full
# Or add this line to your .env file: PYTHON_ENV=full

if [[ "${PYTHON_ENV:-minimal}" == "full" ]]; then
  use flake ~/.dotfiles/flakes/python#full
else
  use flake ~/.dotfiles/flakes/python#default
fi

# Optional: Load .env file if it exists (for secrets and config)
dotenv_if_exists

# Set up uv project if pyproject.toml exists
if [[ -f "pyproject.toml" ]]; then
  echo "ðŸ“¦ UV project detected"
  # uv will handle virtual environment automatically
else
  echo "ðŸ’¡ Initialize with: uv init"
fi

# Optional: Add project-specific environment variables
# export DJANGO_SETTINGS_MODULE="myproject.settings.development"
# export FLASK_ENV="development"
# export DATABASE_URL="postgresql://localhost/myapp_dev"

# Optional: Add project-specific PATH entries
# PATH_add bin
# PATH_add scripts

# Aliases for convenience
alias uv-add="uv add"
alias uv-run="uv run"
alias lint="ruff check ."
alias format="ruff format ."
alias check="ruff check . && ruff format --check ."
